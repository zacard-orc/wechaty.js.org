"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5770,5863,2775,2076,9725,4562,9842,7574,313,196,9685,2826],{35318:function(t,e,n){n.d(e,{Zo:function(){return u},kt:function(){return g}});var o=n(27378);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function s(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,o)}return n}function r(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?s(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,o,a=function(t,e){if(null==t)return{};var n,o,a={},s=Object.keys(t);for(o=0;o<s.length;o++)n=s[o],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(t);for(o=0;o<s.length;o++)n=s[o],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var i=o.createContext({}),c=function(t){var e=o.useContext(i),n=e;return t&&(n="function"==typeof t?t(e):r(r({},e),t)),n},u=function(t){var e=c(t.components);return o.createElement(i.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return o.createElement(o.Fragment,{},e)}},d=o.forwardRef((function(t,e){var n=t.components,a=t.mdxType,s=t.originalType,i=t.parentName,u=l(t,["components","mdxType","originalType","parentName"]),d=c(n),g=a,h=d["".concat(i,".").concat(g)]||d[g]||p[g]||s;return n?o.createElement(h,r(r({ref:e},u),{},{components:n})):o.createElement(h,r({ref:e},u))}));function g(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var s=n.length,r=new Array(s);r[0]=d;var l={};for(var i in e)hasOwnProperty.call(e,i)&&(l[i]=e[i]);l.originalType=t,l.mdxType="string"==typeof t?t:a,r[1]=l;for(var c=2;c<s;c++)r[c]=n[c];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},70517:function(t,e,n){var o=n(27378);e.Z=function(t){var e=t.children,n=t.hidden,a=t.className;return o.createElement("div",{role:"tabpanel",hidden:n,className:a},e)}},64535:function(t,e,n){n.d(e,{Z:function(){return c}});var o=n(27378),a=n(84956);var s=function(){var t=(0,o.useContext)(a.Z);if(null==t)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return t},r=n(38944),l="tabItem_c0e5",i="tabItemActive_28AG";var c=function(t){var e,n=t.lazy,a=t.block,c=t.defaultValue,u=t.values,p=t.groupId,d=t.className,g=o.Children.toArray(t.children),h=null!=u?u:g.map((function(t){return{value:t.props.value,label:t.props.label}})),m=null!=c?c:null==(e=g.find((function(t){return t.props.default})))?void 0:e.props.value,y=s(),b=y.tabGroupChoices,f=y.setTabGroupChoices,k=(0,o.useState)(m),v=k[0],w=k[1],N=[];if(null!=p){var x=b[p];null!=x&&x!==v&&h.some((function(t){return t.value===x}))&&w(x)}var T=function(t){var e=t.currentTarget,n=N.indexOf(e),o=h[n].value;w(o),null!=p&&(f(p,o),setTimeout((function(){var t,n,o,a,s,r,l,c;(t=e.getBoundingClientRect(),n=t.top,o=t.left,a=t.bottom,s=t.right,r=window,l=r.innerHeight,c=r.innerWidth,n>=0&&s<=c&&a<=l&&o>=0)||(e.scrollIntoView({block:"center",behavior:"smooth"}),e.classList.add(i),setTimeout((function(){return e.classList.remove(i)}),2e3))}),150))},C=function(t){var e,n=null;switch(t.key){case"ArrowRight":var o=N.indexOf(t.target)+1;n=N[o]||N[0];break;case"ArrowLeft":var a=N.indexOf(t.target)-1;n=N[a]||N[N.length-1]}null==(e=n)||e.focus()};return o.createElement("div",{className:"tabs-container"},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":a},d)},h.map((function(t){var e=t.value,n=t.label;return o.createElement("li",{role:"tab",tabIndex:v===e?0:-1,"aria-selected":v===e,className:(0,r.Z)("tabs__item",l,{"tabs__item--active":v===e}),key:e,ref:function(t){return N.push(t)},onKeyDown:C,onFocus:T,onClick:T},null!=n?n:e)}))),n?(0,o.cloneElement)(g.filter((function(t){return t.props.value===v}))[0],{className:"margin-vert--md"}):o.createElement("div",{className:"margin-vert--md"},g.map((function(t,e){return(0,o.cloneElement)(t,{key:e,hidden:t.props.value!==v})}))))}},84956:function(t,e,n){var o=(0,n(27378).createContext)(void 0);e.Z=o},16692:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return u},contentTitle:function(){return p},metadata:function(){return d},toc:function(){return g},default:function(){return m}});var o=n(25773),a=n(30808),s=(n(27378),n(35318)),r=n(64535),l=n(70517),i=n(88740),c=["components"],u={title:"Running locally"},p=void 0,d={unversionedId:"getting-started/running-locally",id:"getting-started/running-locally",isDocsHomePage:!1,title:"Running locally",description:"For running Ding Dong Bot, you can setup your own server for running locally. Just follow the steps below:",source:"@site/docs/getting-started/running-locally.mdx",sourceDirName:"getting-started",slug:"/getting-started/running-locally",permalink:"/docs/getting-started/running-locally",editUrl:"https://github.com/wechaty/wechaty.js.org/edit/master/docusaurus/docs/getting-started/running-locally.mdx",tags:[],version:"current",lastUpdatedBy:"Rajiv Singh",lastUpdatedAt:1631370748,formattedLastUpdatedAt:"9/11/2021",frontMatter:{title:"Running locally"},sidebar:"docs",previous:{title:"Running on Gitpod",permalink:"/docs/quick-start/running-on-gitpod"},next:{title:"Video tutorial",permalink:"/docs/tutorials/video-tutorial"}},g=[{value:"Try out the bot",id:"try-out-the-bot",children:[]},{value:"Requirements",id:"requirements",children:[]},{value:"Usage",id:"usage",children:[]},{value:"Getting Started",id:"getting-started",children:[{value:"1. Install make",id:"1-install-make",children:[]},{value:"2. Clone repository",id:"2-clone-repository",children:[]},{value:"3. Install dependencies",id:"3-install-dependencies",children:[]},{value:"4. Run the bot",id:"4-run-the-bot",children:[]}]},{value:"Building the bot",id:"building-the-bot",children:[{value:"1. Initialize project",id:"1-initialize-project",children:[]},{value:"2. Install dependencies",id:"2-install-dependencies",children:[]},{value:"3. Writing code for bot",id:"3-writing-code-for-bot",children:[]}]},{value:"Running the bot",id:"running-the-bot",children:[]},{value:"Bot demonstration",id:"bot-demonstration",children:[]},{value:"Conclusion",id:"conclusion",children:[]},{value:"References",id:"references",children:[]}],h={toc:g};function m(t){var e=t.components,u=(0,a.Z)(t,c);return(0,s.kt)("wrapper",(0,o.Z)({},h,u,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"For running Ding Dong Bot, you can setup your own server for running locally. Just follow the steps below:"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"Getting Started"),(0,s.kt)("li",{parentName:"ol"},"Clone the ",(0,s.kt)("a",{parentName:"li",href:"https://github.com/wechaty/wechaty-getting-started"},"Ding Dong Bot")," repository"),(0,s.kt)("li",{parentName:"ol"},"Install dependencies"),(0,s.kt)("li",{parentName:"ol"},"Run the bot")),(0,s.kt)("h2",{id:"try-out-the-bot"},"Try out the bot"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://codesandbox.io/s/github/wechaty/wechaty-getting-started/tree/master/examples/third-parties/codesandbox?hidenavigation=1&module=%2Fding-dong-bot.ts&theme=dark"},(0,s.kt)("img",{parentName:"a",src:"https://codesandbox.io/static/img/play-codesandbox.svg",alt:"Edit wechaty-ding-dong-bot"}))),(0,s.kt)("p",null,"You can try out Ding Dong Bot using this interactive CodeSandbox."),(0,s.kt)("p",null,"Just scan the generated QR code with ",(0,s.kt)("strong",{parentName:"p"},"WeChat")," app and you are ready to go."),(0,s.kt)("iframe",{class:"codesandbox",src:"https://codesandbox.io/embed/github/wechaty/wechaty-getting-started/tree/master/examples/third-parties/codesandbox?fontsize=12&hidenavigation=1&module=%2Fding-dong-bot.ts&theme=dark",sandbox:"allow-modals allow-forms allow-popups allow-scripts allow-same-origin"}),(0,s.kt)("h2",{id:"requirements"},"Requirements"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("a",{parentName:"li",href:"https://nodejs.dev/"},"Node.js")," v12+"),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("a",{parentName:"li",href:"https://wechaty.js.org/docs/puppet-services/"},"Wechaty Puppet Service TOKEN")," (if you want to use RPA protocols other than Web)")),(0,s.kt)("h2",{id:"usage"},"Usage"),(0,s.kt)(i.default,{mdxType:"ShortestChatbots"}),(0,s.kt)("h2",{id:"getting-started"},"Getting Started"),(0,s.kt)("p",null,"In this tutorial you will learn to use Ding Dong bot which replies with a ",(0,s.kt)("inlineCode",{parentName:"p"},"dong")," message when it receives a ",(0,s.kt)("inlineCode",{parentName:"p"},"ding")," message."),(0,s.kt)("p",null,"Before getting started make sure you have ",(0,s.kt)("inlineCode",{parentName:"p"},"Node")," installed on your system. If you do not have ",(0,s.kt)("inlineCode",{parentName:"p"},"Node.js")," installed (or have a version below 12),\nthen you need to install the latest version of ",(0,s.kt)("inlineCode",{parentName:"p"},"Node.js")," by following the links below:"),(0,s.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Node.js installation docs")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("ul",{parentName:"div"},(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://nodejs.org/en/download/package-manager/#windows"},"Windows")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://nodejs.org/en/download/package-manager/#debian-and-ubuntu-based-linux-distributions"},"Linux","(","Debian/Ubuntu",")")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://nodejs.org/en/download/package-manager/#macos"},"macOS"))),(0,s.kt)("blockquote",{parentName:"div"},(0,s.kt)("p",{parentName:"blockquote"},"Installation guide for ",(0,s.kt)("inlineCode",{parentName:"p"},"Node.js")," in other platforms can be found ",(0,s.kt)("a",{parentName:"p",href:"https://nodejs.org/en/download/package-manager/"},"here"),".")))),(0,s.kt)("p",null,"You can head over to ",(0,s.kt)("a",{parentName:"p",href:"#building-the-bot"},"Building the bot")," section to learn how to build the bot on your own."),(0,s.kt)("p",null,"If you just want to try out the bot on your local system, follow the steps below."),(0,s.kt)("h3",{id:"1-install-make"},"1. Install make"),(0,s.kt)("p",null,"You will need ",(0,s.kt)("inlineCode",{parentName:"p"},"make")," for running the ",(0,s.kt)("strong",{parentName:"p"},"Makefile"),", use the command below to install:"),(0,s.kt)(r.Z,{groupId:"operating-systems",defaultValue:"linux",values:[{label:"Linux",value:"linux"},{label:"macOS",value:"mac"},{label:"Windows",value:"windows"}],mdxType:"Tabs"},(0,s.kt)(l.Z,{value:"linux",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"sudo apt install build-essential\n"))),(0,s.kt)(l.Z,{value:"mac",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"brew install make\n"))),(0,s.kt)(l.Z,{value:"windows",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"choco install make\n")))),(0,s.kt)("h3",{id:"2-clone-repository"},"2. Clone repository"),(0,s.kt)("p",null,"You can clone the ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/wechaty/wechaty-getting-started"},"Ding Dong Bot")," repository by following the below command, and navigate to the directory:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/wechaty/wechaty-getting-started\ncd wechaty-getting-started\n")),(0,s.kt)("h3",{id:"3-install-dependencies"},"3. Install dependencies"),(0,s.kt)("p",null,"For installing the required ",(0,s.kt)("inlineCode",{parentName:"p"},"npm")," dependencies run the following:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"# npm install\nmake install\n")),(0,s.kt)("h3",{id:"4-run-the-bot"},"4. Run the bot"),(0,s.kt)("p",null,"First, you have to ",(0,s.kt)("inlineCode",{parentName:"p"},"export/set")," the environment variables, and then you can run the bot:"),(0,s.kt)(r.Z,{groupId:"operating-systems",defaultValue:"linux",values:[{label:"Linux",value:"linux"},{label:"macOS",value:"mac"},{label:"Windows",value:"windows"}],mdxType:"Tabs"},(0,s.kt)(l.Z,{value:"linux",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"export WECHATY_LOG=verbose\nexport WECHATY_PUPPET=wechaty-puppet-wechat\nmake bot\n# the above is equals to the below command:\n# npm start\n#   or, npx ts-node examples/ding-dong-bot.ts\n"))),(0,s.kt)(l.Z,{value:"mac",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"export WECHATY_LOG=verbose\nexport WECHATY_PUPPET=wechaty-puppet-wechat\nmake bot\n# the above is equals to the below command:\n# npm start\n#   or, npx ts-node examples/ding-dong-bot.ts\n"))),(0,s.kt)(l.Z,{value:"windows",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"set WECHATY_LOG=verbose\nset WECHATY_PUPPET=wechaty-puppet-wechat\nmake bot\n# the above is equals to the below command:\n# npm start\n#   or, npx ts-node examples/ding-dong-bot.ts\n")))),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"There are various ",(0,s.kt)("strong",{parentName:"p"},"Wechaty puppets")," available, you can know more about them ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/wechaty/wechaty-getting-started#working-with-different-puppets"},"here"),".")),(0,s.kt)("p",null,"This will generate a QR code. Scan it using Wechat or WhatsApp depending upon the puppet used. "),(0,s.kt)("p",null,"You are ready to play with the bot."),(0,s.kt)("h2",{id:"building-the-bot"},"Building the bot"),(0,s.kt)("p",null,"Let's get started with building the Ding Dong bot using Wechaty."),(0,s.kt)("h3",{id:"1-initialize-project"},"1. Initialize project"),(0,s.kt)("p",null,"Create a new folder called ",(0,s.kt)("inlineCode",{parentName:"p"},"ding-dong-bot")," and move into that directory."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir ding-dong-bot\ncd ding-dong-bot\n")),(0,s.kt)("p",null,"Use the following command to initialize an npm project:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"npm init -y\n")),(0,s.kt)("p",null,"This will generate the ",(0,s.kt)("inlineCode",{parentName:"p"},"package.json")," file containing these:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "ding-dong-bot",\n  "version": "1.0.0",\n  "description": "",\n  "main": "index.js",\n  "scripts": {\n    "test": "echo \\"Error: no test specified\\" && exit 1"\n  },\n  "keywords": [],\n  "author": "",\n  "license": "ISC"\n}\n')),(0,s.kt)("h3",{id:"2-install-dependencies"},"2. Install dependencies"),(0,s.kt)("p",null,"For building the ding dong bot you will require these dependencies:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/wechaty"},"wechaty"),": Official Wechaty package"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/qrcode-terminal"},"qrcode-terminal"),": Displays the QR code")),(0,s.kt)("p",null,"For installing these dependencies run the following commands:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"For installing wechaty"))),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"npm install wechaty\n")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"For installing qrcode-terminal"))),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"npm install qrcode-terminal\n")),(0,s.kt)("p",null,"You will also need to add dependencies for using any ",(0,s.kt)("a",{parentName:"p",href:"https://wechaty.js.org/docs/puppet-providers/"},"Wechaty Puppet"),"\nwhich helps to integrate Wechaty with various ",(0,s.kt)("strong",{parentName:"p"},"instant messaging (IM) systems")," (such as WeChat, Whatsapp, and Gitter):"),(0,s.kt)("p",null,"You can install wechaty-puppet as you like when using wechaty:"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"If you want to use whatsapp,you can install wechaty-puppet-whatsapp")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"npm install wechaty-puppet-whatsapp\n")),(0,s.kt)("ol",{start:2},(0,s.kt)("li",{parentName:"ol"},"If you want to use wechat, you can install wechaty-puppet-wechat")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"npm install wechaty-puppet-wechat\n")),(0,s.kt)("ol",{start:3},(0,s.kt)("li",{parentName:"ol"},"If you want to use wecom, you can install wechaty-puppet-wxwork")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"npm install wechaty-puppet-wxwork\n")),(0,s.kt)("p",null,"You can find more puppet information here: ",(0,s.kt)("a",{parentName:"p",href:"https://wechaty.js.org/docs/puppet-providers/"},"https://wechaty.js.org/docs/puppet-providers/")),(0,s.kt)("p",null,"Now, you are ready to write main code for bot"),(0,s.kt)("h3",{id:"3-writing-code-for-bot"},"3. Writing code for bot"),(0,s.kt)("p",null,"Create a new folder called ",(0,s.kt)("inlineCode",{parentName:"p"},"src"),", and add a file ",(0,s.kt)("inlineCode",{parentName:"p"},"ding-dong-bot.ts"),". We will be writing the code here."),(0,s.kt)("p",null,"Let's import the required packages in the ",(0,s.kt)("inlineCode",{parentName:"p"},"ding-dong-bot.ts")," file:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"import {\n  Contact,\n  Message,\n  ScanStatus,\n  Wechaty,\n  log,\n}from 'wechaty'\n  \nimport { generate } from 'qrcode-terminal'\n\nrequire('dotenv').config()\n")),(0,s.kt)("p",null,"Now we will write some functions which will be required for handling different events returned by bot."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"onScan")),(0,s.kt)("p",null,"This function will be required for generating QR code for puppet specified and Displays it on console."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"function onScan (qrcode: string, status: ScanStatus) {\n  if (status === ScanStatus.Waiting || status === ScanStatus.Timeout) {\n    generate(qrcode, { small: true })  // show qrcode on console\n\n    const qrcodeImageUrl = [\n      'https://wechaty.js.org/qrcode/',\n      encodeURIComponent(qrcode),\n    ].join('')\n\n    log.info('StarterBot', 'onScan: %s(%s) - %s', ScanStatus[status], status, qrcodeImageUrl)\n  } else {\n    log.info('StarterBot', 'onScan: %s(%s)', ScanStatus[status], status)\n  }\n}\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"1."),"  If ",(0,s.kt)("inlineCode",{parentName:"p"},"status")," is ",(0,s.kt)("strong",{parentName:"p"},"Waiting")," or ",(0,s.kt)("strong",{parentName:"p"},"Timeout")," then function ",(0,s.kt)("inlineCode",{parentName:"p"},"onScan")," will generate qrcode"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"2."),"  ",(0,s.kt)("inlineCode",{parentName:"p"},"qrcodeImageUrl")," is used for reading the generated ",(0,s.kt)("inlineCode",{parentName:"p"},"qrcode"),". ",(0,s.kt)("inlineCode",{parentName:"p"},"encodeURIComponent(qrcode)")," encodes a URI (string that refers to a resource ie. qrcode) by replacing each instance of certain characters by UTF-8 encoding of characters. "),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"3."),"  After reading the ",(0,s.kt)("inlineCode",{parentName:"p"},"qrcode")," it return ",(0,s.kt)("inlineCode",{parentName:"p"},"ScanStatus"),"."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"onLogin")),(0,s.kt)("p",null,"This function will print message when a user logs into the bot."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"function onLogin (user: Contact) {\n  log.info('StarterBot', '%s login', user)\n}\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"onLogout")),(0,s.kt)("p",null,"This will print message when a user logs out."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"function onLogout (user: Contact) {\n  log.info('StarterBot', '%s logout', user)\n}\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"onMessage")),(0,s.kt)("p",null,"This will print a log message. If the message is ",(0,s.kt)("inlineCode",{parentName:"p"},"ding")," then it will print ",(0,s.kt)("inlineCode",{parentName:"p"},"dong"),"."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"async function onMessage (msg: Message) {\n  log.info('StarterBot', msg.toString())\n\n  if (msg.text() === 'ding') {\n    await msg.say('dong')\n  }\n}\n")),(0,s.kt)("p",null,"Now initializing the bot by providing a name."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"const bot = new Wechaty({\n  name: 'ding-dong-bot',\n})\n")),(0,s.kt)("p",null,"Assigning proper functions to call when an event is triggered."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"bot.on('scan',    onScan)\nbot.on('login',   onLogin)\nbot.on('logout',  onLogout)\nbot.on('message', onMessage)\n")),(0,s.kt)("p",null,"Finally for starting the bot"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"bot.start()\n  .then(() => log.info('StarterBot', 'Starter Bot Started.'))\n  .catch(e => log.error('StarterBot', e))\n")),(0,s.kt)("h2",{id:"running-the-bot"},"Running the bot"),(0,s.kt)("p",null,"In order to run the bot, first you have to ",(0,s.kt)("strong",{parentName:"p"},"export/set")," an environment variable with the type of puppet to use and then run the bot:"),(0,s.kt)(r.Z,{groupId:"operating-systems",defaultValue:"linux",values:[{label:"Linux",value:"linux"},{label:"macOS",value:"mac"},{label:"Windows",value:"windows"}],mdxType:"Tabs"},(0,s.kt)(l.Z,{value:"linux",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"export WECHATY_LOG=verbose\nexport WECHATY_PUPPET=wechaty-puppet-wechat\n\nnpx ts-node src/ding-dong-bot.ts\n"))),(0,s.kt)(l.Z,{value:"mac",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"export WECHATY_LOG=verbose\nexport WECHATY_PUPPET=wechaty-puppet-wechat\n\nts-node src/ding-dong-bot.ts\n"))),(0,s.kt)(l.Z,{value:"windows",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"set WECHATY_LOG=verbose\nset WECHATY_PUPPET=wechaty-puppet-wechat\n\nnpx ts-node src/ding-dong-bot.ts\n")))),(0,s.kt)("p",null,"This will start bot and generate QR code like this:"),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"hard-way",src:n(21345).Z})),(0,s.kt)("p",null,"Scan it using your ",(0,s.kt)("strong",{parentName:"p"},"WeChat/WhatsApp")," as per the puppet you have selected, and you are ready to play with the bot!"),(0,s.kt)("h2",{id:"bot-demonstration"},"Bot demonstration"),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"bot-demo",src:n(40480).Z})),(0,s.kt)("h2",{id:"conclusion"},"Conclusion"),(0,s.kt)("p",null,"You have learnt to make a ding dong bot."),(0,s.kt)("h2",{id:"references"},"References"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},(0,s.kt)("a",{parentName:"strong",href:"https://github.com/wechaty/wechaty-getting-started"},"wechaty-getting-started"))))}m.isMDXComponent=!0},60748:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return l},contentTitle:function(){return i},metadata:function(){return c},toc:function(){return u},default:function(){return d}});var o=n(25773),a=n(30808),s=(n(27378),n(35318)),r=["components"],l={},i=void 0,c={unversionedId:"polyglot/dotnet/transclusions/shortest-chatbot",id:"polyglot/dotnet/transclusions/shortest-chatbot",isDocsHomePage:!1,title:"shortest-chatbot",description:"`csharp",source:"@site/docs/polyglot/dotnet/transclusions/shortest-chatbot.mdx",sourceDirName:"polyglot/dotnet/transclusions",slug:"/polyglot/dotnet/transclusions/shortest-chatbot",permalink:"/docs/polyglot/dotnet/transclusions/shortest-chatbot",editUrl:"https://github.com/wechaty/wechaty.js.org/edit/master/docusaurus/docs/polyglot/dotnet/transclusions/shortest-chatbot.mdx",tags:[],version:"current",lastUpdatedBy:"Rajiv Singh",lastUpdatedAt:1631370748,formattedLastUpdatedAt:"9/11/2021",frontMatter:{}},u=[],p={toc:u};function d(t){var e=t.components,n=(0,a.Z)(t,r);return(0,s.kt)("wrapper",(0,o.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp"},'var wechaty = new Wechaty(options, logger).onScan((qrcode, status) => {\n  Console.WriteLine($"Scan QR Code to login: {status} https://wechaty.js.org/qrcode/{(qrcode)}`");\n}).OnLogin( user => {\n  Console.WriteLine("User {user} logined");\n}).OnMessage( message => {\n  Console.WriteLine($"Message: {message}");\n}).Start();\n')))}d.isMDXComponent=!0},26692:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return l},contentTitle:function(){return i},metadata:function(){return c},toc:function(){return u},default:function(){return d}});var o=n(25773),a=n(30808),s=(n(27378),n(35318)),r=["components"],l={},i=void 0,c={unversionedId:"polyglot/go/transclusions/shortest-chatbot",id:"polyglot/go/transclusions/shortest-chatbot",isDocsHomePage:!1,title:"shortest-chatbot",description:"`go",source:"@site/docs/polyglot/go/transclusions/shortest-chatbot.mdx",sourceDirName:"polyglot/go/transclusions",slug:"/polyglot/go/transclusions/shortest-chatbot",permalink:"/docs/polyglot/go/transclusions/shortest-chatbot",editUrl:"https://github.com/wechaty/wechaty.js.org/edit/master/docusaurus/docs/polyglot/go/transclusions/shortest-chatbot.mdx",tags:[],version:"current",lastUpdatedBy:"Rajiv Singh",lastUpdatedAt:1631370748,formattedLastUpdatedAt:"9/11/2021",frontMatter:{}},u=[],p={toc:u};function d(t){var e=t.components,n=(0,a.Z)(t,r);return(0,s.kt)("wrapper",(0,o.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport (\n "fmt"\n\n  "github.com/wechaty/go-wechaty/wechaty"\n)\n\nfunc main() {\n  _ = wechaty.NewWechaty().\n    OnScan(func(qrCode, status string) {\n      fmt.Printf("Scan QR Code to login: %s\\nhttps://wechaty.js.org/qrcode/%s\\n", status, qrCode)\n    }).\n    OnLogin(func(user string) { fmt.Printf("User %s logged in\\n", user) }).\n    OnMessage(func(message string) { fmt.Printf("Message: %s\\n", message) }).\n    Start()\n}\n')))}d.isMDXComponent=!0},98441:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return l},contentTitle:function(){return i},metadata:function(){return c},toc:function(){return u},default:function(){return d}});var o=n(25773),a=n(30808),s=(n(27378),n(35318)),r=["components"],l={},i=void 0,c={unversionedId:"polyglot/java/transclusions/shortest-chatbot",id:"polyglot/java/transclusions/shortest-chatbot",isDocsHomePage:!1,title:"shortest-chatbot",description:"`java",source:"@site/docs/polyglot/java/transclusions/shortest-chatbot.mdx",sourceDirName:"polyglot/java/transclusions",slug:"/polyglot/java/transclusions/shortest-chatbot",permalink:"/docs/polyglot/java/transclusions/shortest-chatbot",editUrl:"https://github.com/wechaty/wechaty.js.org/edit/master/docusaurus/docs/polyglot/java/transclusions/shortest-chatbot.mdx",tags:[],version:"current",lastUpdatedBy:"Rajiv Singh",lastUpdatedAt:1631370748,formattedLastUpdatedAt:"9/11/2021",frontMatter:{}},u=[],p={toc:u};function d(t){var e=t.components,n=(0,a.Z)(t,r);return(0,s.kt)("wrapper",(0,o.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},'package io.github.wechaty;\n\nclass Bot{\n  public static void main(String args[]){\n    Wechaty bot = Wechaty.instance()\n      .onScan((qrcode, statusScanStatus, data) -> System.out.println(QrcodeUtils.getQr(qrcode)))\n      .onLogin(user -> System.out.println("User logged in :" + user))\n      .onMessage(message -> System.out.println("Message:" + message))\n      .start(true);\n  }\n}\n')))}d.isMDXComponent=!0},77582:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return l},contentTitle:function(){return i},metadata:function(){return c},toc:function(){return u},default:function(){return d}});var o=n(25773),a=n(30808),s=(n(27378),n(35318)),r=["components"],l={},i=void 0,c={unversionedId:"polyglot/openapi/transclusions/shortest-chatbot",id:"polyglot/openapi/transclusions/shortest-chatbot",isDocsHomePage:!1,title:"shortest-chatbot",description:"`sh",source:"@site/docs/polyglot/openapi/transclusions/shortest-chatbot.mdx",sourceDirName:"polyglot/openapi/transclusions",slug:"/polyglot/openapi/transclusions/shortest-chatbot",permalink:"/docs/polyglot/openapi/transclusions/shortest-chatbot",editUrl:"https://github.com/wechaty/wechaty.js.org/edit/master/docusaurus/docs/polyglot/openapi/transclusions/shortest-chatbot.mdx",tags:[],version:"current",lastUpdatedBy:"Rajiv Singh",lastUpdatedAt:1631370748,formattedLastUpdatedAt:"9/11/2021",frontMatter:{}},u=[],p={toc:u};function d(t){var e=t.components,n=(0,a.Z)(t,r);return(0,s.kt)("wrapper",(0,o.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"# To be add: curl ...\n")))}d.isMDXComponent=!0},15017:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return l},contentTitle:function(){return i},metadata:function(){return c},toc:function(){return u},default:function(){return d}});var o=n(25773),a=n(30808),s=(n(27378),n(35318)),r=["components"],l={},i=void 0,c={unversionedId:"polyglot/php/transclusions/shortest-chatbot",id:"polyglot/php/transclusions/shortest-chatbot",isDocsHomePage:!1,title:"shortest-chatbot",description:"`php",source:"@site/docs/polyglot/php/transclusions/shortest-chatbot.mdx",sourceDirName:"polyglot/php/transclusions",slug:"/polyglot/php/transclusions/shortest-chatbot",permalink:"/docs/polyglot/php/transclusions/shortest-chatbot",editUrl:"https://github.com/wechaty/wechaty.js.org/edit/master/docusaurus/docs/polyglot/php/transclusions/shortest-chatbot.mdx",tags:[],version:"current",lastUpdatedBy:"Rajiv Singh",lastUpdatedAt:1631370748,formattedLastUpdatedAt:"9/11/2021",frontMatter:{}},u=[],p={toc:u};function d(t){var e=t.components,n=(0,a.Z)(t,r);return(0,s.kt)("wrapper",(0,o.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-php"},'$wechaty = \\IO\\Github\\Wechaty\\Wechaty::getInstance($token, $endPoint);\n$wechaty->onScan(function($qrcode, $status, $data) {\n    $qr = \\IO\\Github\\Wechaty\\Util\\QrcodeUtils::getQr($qrcode);\n    echo "$qr\\n\\nOnline Image: https://wechaty.js.org/qrcode/$qrcode\\n";\n})->onLogin(function(\\IO\\Github\\Wechaty\\User\\ContactSelf $user) {\n})->onMessage(function(\\IO\\Github\\Wechaty\\User\\Message $message) {\n    $message->say("hello from PHP7.4");\n})->start();\n')))}d.isMDXComponent=!0},26534:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return l},contentTitle:function(){return i},metadata:function(){return c},toc:function(){return u},default:function(){return d}});var o=n(25773),a=n(30808),s=(n(27378),n(35318)),r=["components"],l={},i=void 0,c={unversionedId:"polyglot/python/transclusions/shortest-chatbot",id:"polyglot/python/transclusions/shortest-chatbot",isDocsHomePage:!1,title:"shortest-chatbot",description:"`py",source:"@site/docs/polyglot/python/transclusions/shortest-chatbot.mdx",sourceDirName:"polyglot/python/transclusions",slug:"/polyglot/python/transclusions/shortest-chatbot",permalink:"/docs/polyglot/python/transclusions/shortest-chatbot",editUrl:"https://github.com/wechaty/wechaty.js.org/edit/master/docusaurus/docs/polyglot/python/transclusions/shortest-chatbot.mdx",tags:[],version:"current",lastUpdatedBy:"Rajiv Singh",lastUpdatedAt:1631370748,formattedLastUpdatedAt:"9/11/2021",frontMatter:{}},u=[],p={toc:u};function d(t){var e=t.components,n=(0,a.Z)(t,r);return(0,s.kt)("wrapper",(0,o.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-py"},"from wechaty import Wechaty\nimport asyncio\n\nasync def main():\n    bot = Wechaty()\n    bot.on('scan', lambda status, qrcode, data: print('Scan QR Code to login: {}\\nhttps://wechaty.js.org/qrcode/{}'.format(status, qrcode)))\n    bot.on('login', lambda user: print('User {} logged in'.format(user)))\n    bot.on('message', lambda message: print('Message: {}'.format(message)))\n    await bot.start()\n\nasyncio.run(main())\n")))}d.isMDXComponent=!0},16881:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return l},contentTitle:function(){return i},metadata:function(){return c},toc:function(){return u},default:function(){return d}});var o=n(25773),a=n(30808),s=(n(27378),n(35318)),r=["components"],l={},i=void 0,c={unversionedId:"polyglot/rust/transclusions/shortest-chatbot",id:"polyglot/rust/transclusions/shortest-chatbot",isDocsHomePage:!1,title:"shortest-chatbot",description:"`rust",source:"@site/docs/polyglot/rust/transclusions/shortest-chatbot.mdx",sourceDirName:"polyglot/rust/transclusions",slug:"/polyglot/rust/transclusions/shortest-chatbot",permalink:"/docs/polyglot/rust/transclusions/shortest-chatbot",editUrl:"https://github.com/wechaty/wechaty.js.org/edit/master/docusaurus/docs/polyglot/rust/transclusions/shortest-chatbot.mdx",tags:[],version:"current",lastUpdatedBy:"Rajiv Singh",lastUpdatedAt:1631370748,formattedLastUpdatedAt:"9/11/2021",frontMatter:{}},u=[],p={toc:u};function d(t){var e=t.components,n=(0,a.Z)(t,r);return(0,s.kt)("wrapper",(0,o.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-rust"},"let bot = Wechaty::new(PuppetService::new(options).await.unwrap());\n\nbot.on_scan(handle_scan)\n    .on_login(handle_login)\n    .on_logout(handle_logout)\n    .on_message(handle_message)\n    .start()\n    .await;\n")))}d.isMDXComponent=!0},76714:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return l},contentTitle:function(){return i},metadata:function(){return c},toc:function(){return u},default:function(){return d}});var o=n(25773),a=n(30808),s=(n(27378),n(35318)),r=["components"],l={},i=void 0,c={unversionedId:"polyglot/scala/transclusions/shortest-chatbot",id:"polyglot/scala/transclusions/shortest-chatbot",isDocsHomePage:!1,title:"shortest-chatbot",description:"`scala",source:"@site/docs/polyglot/scala/transclusions/shortest-chatbot.mdx",sourceDirName:"polyglot/scala/transclusions",slug:"/polyglot/scala/transclusions/shortest-chatbot",permalink:"/docs/polyglot/scala/transclusions/shortest-chatbot",editUrl:"https://github.com/wechaty/wechaty.js.org/edit/master/docusaurus/docs/polyglot/scala/transclusions/shortest-chatbot.mdx",tags:[],version:"current",lastUpdatedBy:"Rajiv Singh",lastUpdatedAt:1631370748,formattedLastUpdatedAt:"9/11/2021",frontMatter:{}},u=[],p={toc:u};function d(t){var e=t.components,n=(0,a.Z)(t,r);return(0,s.kt)("wrapper",(0,o.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-scala"},'package wechaty\n\nobject DingDongBot {\n  def main(args: Array[String]): Unit = {\n    Wechaty.instance()\n      .onScan(payload     => { println("Scan QR Code to login: %s\\nhttps://wechaty.js.org/qrcode/%s\\n".format(payload.status, payload.qrcode)) })\n      .onLogin(payload    => { println("User %s logged in\\n".format(payload.id)) })\n      .onMessage(message  => { println(message) })\n      .start()\n    Thread.currentThread().join()\n  }\n}\n')))}d.isMDXComponent=!0},88740:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return k},contentTitle:function(){return v},metadata:function(){return w},toc:function(){return N},default:function(){return T}});var o=n(25773),a=n(30808),s=(n(27378),n(35318)),r=n(64535),l=n(70517),i=n(54249),c=n(77582),u=n(86203),p=n(26534),d=n(26692),g=n(98441),h=n(15017),m=n(76714),y=n(60748),b=n(16881),f=["components"],k={},v=void 0,w={unversionedId:"polyglot/transclusions/shortest-chatbots",id:"polyglot/transclusions/shortest-chatbots",isDocsHomePage:!1,title:"shortest-chatbots",description:"<Tabs",source:"@site/docs/polyglot/transclusions/shortest-chatbots.mdx",sourceDirName:"polyglot/transclusions",slug:"/polyglot/transclusions/shortest-chatbots",permalink:"/docs/polyglot/transclusions/shortest-chatbots",editUrl:"https://github.com/wechaty/wechaty.js.org/edit/master/docusaurus/docs/polyglot/transclusions/shortest-chatbots.mdx",tags:[],version:"current",lastUpdatedBy:"Rajiv Singh",lastUpdatedAt:1631370748,formattedLastUpdatedAt:"9/11/2021",frontMatter:{}},N=[],x={toc:N};function T(t){var e=t.components,n=(0,a.Z)(t,f);return(0,s.kt)("wrapper",(0,o.Z)({},x,n,{components:e,mdxType:"MDXLayout"}),(0,s.kt)(r.Z,{groupId:"programming-languages",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"},{label:"Python",value:"py"},{label:"Go",value:"go"},{label:"Java",value:"java"},{label:"PHP",value:"php"},{label:"Scala",value:"scala"},{label:"C#",value:"csharp"},{label:"Rust",value:"rust"},{label:"OpenAPI",value:"openapi"}],mdxType:"Tabs"},(0,s.kt)(l.Z,{value:"ts",mdxType:"TabItem"},(0,s.kt)(i.default,{mdxType:"ShortestChatbotTypeScript"})),(0,s.kt)(l.Z,{value:"js",mdxType:"TabItem"},(0,s.kt)(u.default,{mdxType:"ShortestChatbotJavaScript"})),(0,s.kt)(l.Z,{value:"py",mdxType:"TabItem"},(0,s.kt)(p.default,{mdxType:"ShortestChatbotPython"})),(0,s.kt)(l.Z,{value:"go",mdxType:"TabItem"},(0,s.kt)(d.default,{mdxType:"ShortestChatbotGo"})),(0,s.kt)(l.Z,{value:"java",mdxType:"TabItem"},(0,s.kt)(g.default,{mdxType:"ShortestChatbotJava"})),(0,s.kt)(l.Z,{value:"php",mdxType:"TabItem"},(0,s.kt)(h.default,{mdxType:"ShortestChatbotPhp"})),(0,s.kt)(l.Z,{value:"scala",mdxType:"TabItem"},(0,s.kt)(m.default,{mdxType:"ShortestChatbotScala"})),(0,s.kt)(l.Z,{value:"csharp",mdxType:"TabItem"},(0,s.kt)(y.default,{mdxType:"ShortestChatbotDotnet"})),(0,s.kt)(l.Z,{value:"rust",mdxType:"TabItem"},(0,s.kt)(b.default,{mdxType:"ShortestChatbotRust"})),(0,s.kt)(l.Z,{value:"openapi",mdxType:"TabItem"},(0,s.kt)(c.default,{mdxType:"ShortestChatbotOpenApi"}))))}T.isMDXComponent=!0},86203:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return l},contentTitle:function(){return i},metadata:function(){return c},toc:function(){return u},default:function(){return d}});var o=n(25773),a=n(30808),s=(n(27378),n(35318)),r=["components"],l={},i=void 0,c={unversionedId:"polyglot/typescript/transclusions/shortest-chatbot-js",id:"polyglot/typescript/transclusions/shortest-chatbot-js",isDocsHomePage:!1,title:"shortest-chatbot-js",description:"`js",source:"@site/docs/polyglot/typescript/transclusions/shortest-chatbot-js.mdx",sourceDirName:"polyglot/typescript/transclusions",slug:"/polyglot/typescript/transclusions/shortest-chatbot-js",permalink:"/docs/polyglot/typescript/transclusions/shortest-chatbot-js",editUrl:"https://github.com/wechaty/wechaty.js.org/edit/master/docusaurus/docs/polyglot/typescript/transclusions/shortest-chatbot-js.mdx",tags:[],version:"current",lastUpdatedBy:"Rajiv Singh",lastUpdatedAt:1631370748,formattedLastUpdatedAt:"9/11/2021",frontMatter:{}},u=[],p={toc:u};function d(t){var e=t.components,n=(0,a.Z)(t,r);return(0,s.kt)("wrapper",(0,o.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"const { Wechaty } = require('wechaty')\n\nasync function main () {\n  const bot = new Wechaty()\n  bot\n    .on('scan', (qrcode, status) => console.log(`Scan QR Code to login: ${status}\\nhttps://wechaty.js.org/qrcode/${encodeURIComponent(qrcode)}`))\n    .on('login',            user => console.log(`User ${user} logged in`))\n    .on('message',       message => console.log(`Message: ${message}`))\n  await bot.start()\n}\n\nmain()\n  .catch(console.error)\n")))}d.isMDXComponent=!0},54249:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return l},contentTitle:function(){return i},metadata:function(){return c},toc:function(){return u},default:function(){return d}});var o=n(25773),a=n(30808),s=(n(27378),n(35318)),r=["components"],l={},i=void 0,c={unversionedId:"polyglot/typescript/transclusions/shortest-chatbot",id:"polyglot/typescript/transclusions/shortest-chatbot",isDocsHomePage:!1,title:"shortest-chatbot",description:"`ts",source:"@site/docs/polyglot/typescript/transclusions/shortest-chatbot.mdx",sourceDirName:"polyglot/typescript/transclusions",slug:"/polyglot/typescript/transclusions/shortest-chatbot",permalink:"/docs/polyglot/typescript/transclusions/shortest-chatbot",editUrl:"https://github.com/wechaty/wechaty.js.org/edit/master/docusaurus/docs/polyglot/typescript/transclusions/shortest-chatbot.mdx",tags:[],version:"current",lastUpdatedBy:"Rajiv Singh",lastUpdatedAt:1631370748,formattedLastUpdatedAt:"9/11/2021",frontMatter:{}},u=[],p={toc:u};function d(t){var e=t.components,n=(0,a.Z)(t,r);return(0,s.kt)("wrapper",(0,o.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"import { Wechaty } from 'wechaty'\n\nasync function main () {\n  const bot = new Wechaty()\n  bot\n    .on('scan', (qrcode, status) => console.log(`Scan QR Code to login: ${status}\\nhttps://wechaty.js.org/qrcode/${encodeURIComponent(qrcode)}`))\n    .on('login',            user => console.log(`User ${user} logged in`))\n    .on('message',       message => console.log(`Message: ${message}`))\n  await bot.start()\n}\n\nmain()\n  .catch(console.error)\n")))}d.isMDXComponent=!0},40480:function(t,e,n){e.Z=n.p+"assets/images/bot-demo-5c7f74a2041e02e9bdc3b58eef45e4f8.png"},21345:function(t,e,n){e.Z=n.p+"assets/images/hard-way-69bf388a7b98909def961572a62b3420.png"}}]);